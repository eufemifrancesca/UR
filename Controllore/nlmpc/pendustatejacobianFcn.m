function [A,B] = pendustatejacobianFcn(t,X)

syms X1 X2 X3 X4 m1 m2 L1 d1 d2 I1zz I2zz g0 tau1 tau2    
A = jacobian([X3; (I2zz*tau1 - I2zz*tau2 + d2^2*m2*tau1 - d2^2*m2*tau2 - L1*d2^2*g0*m2^2*cos(X1) - I2zz*L1*g0*m2*cos(X1) - I2zz*d1*g0*m1*cos(X1) - L1*d2*m2*tau2*cos(X2) + L1*d2^3*X3^2*m2^2*sin(X2) + L1*d2^3*X4^2*m2^2*sin(X2) + L1^2*d2^2*X3^2*m2^2*cos(X2)*sin(X2) + L1*d2^2*g0*m2^2*cos(X1 + X2)*cos(X2) + I2zz*L1*d2*X3^2*m2*sin(X2) + I2zz*L1*d2*X4^2*m2*sin(X2) - d1*d2^2*g0*m1*m2*cos(X1) + 2*L1*d2^3*X3*X4*m2^2*sin(X2) + 2*I2zz*L1*d2*X3*X4*m2*sin(X2))/(- L1^2*d2^2*m2^2*cos(X2)^2 + L1^2*d2^2*m2^2 + I2zz*L1^2*m2 + m1*d1^2*d2^2*m2 + I2zz*m1*d1^2 + I1zz*d2^2*m2 + I1zz*I2zz);X4;-(I2zz*tau1 - I1zz*tau2 - I2zz*tau2 - d1^2*m1*tau2 + d2^2*m2*tau1 - d2^2*m2*tau2 - L1^2*m2*tau2 + L1^2*d2*g0*m2^2*cos(X1 + X2) - L1*d2^2*g0*m2^2*cos(X1) + I1zz*d2*g0*m2*cos(X1 + X2) - I2zz*L1*g0*m2*cos(X1) - I2zz*d1*g0*m1*cos(X1) + L1*d2*m2*tau1*cos(X2) - 2*L1*d2*m2*tau2*cos(X2) + L1*d2^3*X3^2*m2^2*sin(X2) + L1^3*d2*X3^2*m2^2*sin(X2) + L1*d2^3*X4^2*m2^2*sin(X2) + 2*L1^2*d2^2*X3^2*m2^2*cos(X2)*sin(X2) + L1^2*d2^2*X4^2*m2^2*cos(X2)*sin(X2) + L1*d2^2*g0*m2^2*cos(X1 + X2)*cos(X2) - L1^2*d2*g0*m2^2*cos(X1)*cos(X2) + d1^2*d2*g0*m1*m2*cos(X1 + X2) + I1zz*L1*d2*X3^2*m2*sin(X2) + I2zz*L1*d2*X3^2*m2*sin(X2) + I2zz*L1*d2*X4^2*m2*sin(X2) - d1*d2^2*g0*m1*m2*cos(X1) + 2*L1*d2^3*X3*X4*m2^2*sin(X2) + 2*L1^2*d2^2*X3*X4*m2^2*cos(X2)*sin(X2) + L1*d1^2*d2*X3^2*m1*m2*sin(X2) + 2*I2zz*L1*d2*X3*X4*m2*sin(X2) - L1*d1*d2*g0*m1*m2*cos(X1)*cos(X2))/(- L1^2*d2^2*m2^2*cos(X2)^2 + L1^2*d2^2*m2^2 + I2zz*L1^2*m2 + m1*d1^2*d2^2*m2 + I2zz*m1*d1^2 + I1zz*d2^2*m2 + I1zz*I2zz)],[X1,X2,X3,X4]);
B = jacobian([X3; (I2zz*tau1 - I2zz*tau2 + d2^2*m2*tau1 - d2^2*m2*tau2 - L1*d2^2*g0*m2^2*cos(X1) - I2zz*L1*g0*m2*cos(X1) - I2zz*d1*g0*m1*cos(X1) - L1*d2*m2*tau2*cos(X2) + L1*d2^3*X3^2*m2^2*sin(X2) + L1*d2^3*X4^2*m2^2*sin(X2) + L1^2*d2^2*X3^2*m2^2*cos(X2)*sin(X2) + L1*d2^2*g0*m2^2*cos(X1 + X2)*cos(X2) + I2zz*L1*d2*X3^2*m2*sin(X2) + I2zz*L1*d2*X4^2*m2*sin(X2) - d1*d2^2*g0*m1*m2*cos(X1) + 2*L1*d2^3*X3*X4*m2^2*sin(X2) + 2*I2zz*L1*d2*X3*X4*m2*sin(X2))/(- L1^2*d2^2*m2^2*cos(X2)^2 + L1^2*d2^2*m2^2 + I2zz*L1^2*m2 + m1*d1^2*d2^2*m2 + I2zz*m1*d1^2 + I1zz*d2^2*m2 + I1zz*I2zz);X4;-(I2zz*tau1 - I1zz*tau2 - I2zz*tau2 - d1^2*m1*tau2 + d2^2*m2*tau1 - d2^2*m2*tau2 - L1^2*m2*tau2 + L1^2*d2*g0*m2^2*cos(X1 + X2) - L1*d2^2*g0*m2^2*cos(X1) + I1zz*d2*g0*m2*cos(X1 + X2) - I2zz*L1*g0*m2*cos(X1) - I2zz*d1*g0*m1*cos(X1) + L1*d2*m2*tau1*cos(X2) - 2*L1*d2*m2*tau2*cos(X2) + L1*d2^3*X3^2*m2^2*sin(X2) + L1^3*d2*X3^2*m2^2*sin(X2) + L1*d2^3*X4^2*m2^2*sin(X2) + 2*L1^2*d2^2*X3^2*m2^2*cos(X2)*sin(X2) + L1^2*d2^2*X4^2*m2^2*cos(X2)*sin(X2) + L1*d2^2*g0*m2^2*cos(X1 + X2)*cos(X2) - L1^2*d2*g0*m2^2*cos(X1)*cos(X2) + d1^2*d2*g0*m1*m2*cos(X1 + X2) + I1zz*L1*d2*X3^2*m2*sin(X2) + I2zz*L1*d2*X3^2*m2*sin(X2) + I2zz*L1*d2*X4^2*m2*sin(X2) - d1*d2^2*g0*m1*m2*cos(X1) + 2*L1*d2^3*X3*X4*m2^2*sin(X2) + 2*L1^2*d2^2*X3*X4*m2^2*cos(X2)*sin(X2) + L1*d1^2*d2*X3^2*m1*m2*sin(X2) + 2*I2zz*L1*d2*X3*X4*m2*sin(X2) - L1*d1*d2*g0*m1*m2*cos(X1)*cos(X2))/(- L1^2*d2^2*m2^2*cos(X2)^2 + L1^2*d2^2*m2^2 + I2zz*L1^2*m2 + m1*d1^2*d2^2*m2 + I2zz*m1*d1^2 + I1zz*d2^2*m2 + I1zz*I2zz)],[tau1,tau2]);

end